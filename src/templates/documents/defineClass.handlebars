@JsonSerializable()
class {{ className }} {
  {{#if typeName }}
  static final String schemaTypeName = "{{ typeName }}";
  {{/if}}

  {{#each fields}}{{#if type}}{{#if name}}
  {{#if description }}{{ multilineComment description }}
  {{/if}}
  @JsonKey(required: {{isRequired}}, disallowNullValue: {{isRequired}})
  {{ resolveType type
      'final'
      (takeFirst contextName ../contextName)
      (takeFirst contextModels ../contextModels)
      isArray
      raw
      ../className
  }} {{name}};
  {{~/if}}{{/if}}{{/each}}

  {{#if hasInlineFragments~}}
  {{#each inlineFragments}}
    @JsonKey(ignore: true)
    {{ concat ../contextName name }} {{ camelCase name}};
  {{/each}}
  {{~/if}}

  {{className}}(
  {{~#if fields.length~}}
  {
    {{#each fields}}{{#if name}}
    {{~#if isRequired}}@required {{/if}}this.{{name}},
    {{/if}}{{/each}}
  }
  {{~/if}});

  factory {{className}}.fromJson(Map<String, dynamic> json) => 
    _${{className}}FromJson(json);

  Map<String, dynamic> toJson() => _${{className}}ToJson(this)
    {{#if typeName }}..['__typename'] = typeName{{/if}};

}

